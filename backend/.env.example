# ==============================================================================
# AI COURSE CREATOR - ENVIRONMENT CONFIGURATION
# ==============================================================================
# This file contains all environment variables for the backend service.
# Copy this file to .env and update with your actual values.
# 
# SECURITY WARNING: Never commit .env files with real values to version control!
# For detailed documentation, see: docs/ENVIRONMENT.md
# ==============================================================================

# ==============================================================================
# SERVER CONFIGURATION
# ==============================================================================

# Application environment (development | production | test)
# Affects: logging levels, error handling, performance optimizations
NODE_ENV=development

# Port for the backend API server
# Default: 3001 (to avoid conflicts with frontend on 3000)
PORT=3001

# Frontend URL for CORS configuration
# Must match your frontend deployment URL exactly (no trailing slash)
# Production example: https://courses.yourdomain.com
FRONTEND_URL=http://localhost:5173

# ==============================================================================
# DATABASE CONFIGURATION (SUPABASE) - REQUIRED
# ==============================================================================
# Sign up at https://supabase.com to get these values

# Supabase project URL
# Found in: Supabase Dashboard > Settings > API > Project URL
# Format: https://[project-id].supabase.co
SUPABASE_URL=your_supabase_project_url

# Supabase anonymous key (safe for frontend)
# Found in: Supabase Dashboard > Settings > API > anon/public key
# This key respects Row Level Security (RLS) policies
SUPABASE_ANON_KEY=your_supabase_anon_key

# Supabase service role key (server-side only!)
# Found in: Supabase Dashboard > Settings > API > service_role key
# WARNING: This bypasses RLS - keep it secret!
SUPABASE_SERVICE_KEY=your_supabase_service_key

# ==============================================================================
# AI SERVICES - REQUIRED
# ==============================================================================

# Anthropic Claude API key for course generation
# Get it from: https://console.anthropic.com
# Pricing: https://www.anthropic.com/pricing
# Format: sk-ant-api03-...
ANTHROPIC_API_KEY=your_anthropic_api_key

# Jina AI API key for embeddings and reranking
# Get it from: https://jina.ai (free tier available)
# Used for: Document embeddings, semantic search, content reranking
# Format: jina_...
JINA_API_KEY=your_jina_api_key

# ==============================================================================
# VECTOR DATABASE (QDRANT)
# ==============================================================================

# Qdrant vector database URL
# Local Docker: docker run -p 6333:6333 qdrant/qdrant
# Cloud: https://cloud.qdrant.io (free tier available)
# Format: http://localhost:6333 or https://xyz.aws.qdrant.io
QDRANT_URL=http://localhost:6333

# Qdrant API key (only required for cloud deployments)
# Leave empty for local Docker deployments
QDRANT_API_KEY=your_qdrant_api_key

# Collection name for storing document embeddings
# Will be created automatically if it doesn't exist
QDRANT_COLLECTION_NAME=course_documents

# ==============================================================================
# AUTHENTICATION - REQUIRED
# ==============================================================================

# JWT secret for signing tokens (minimum 32 characters)
# Generate with: openssl rand -base64 32
# CRITICAL: Use different secrets for each environment!
JWT_SECRET=your_jwt_secret_key

# JWT token expiration time (zeit/ms format)
# Examples: 1h, 24h, 7d, 30d
# Shorter = more secure, Longer = better user experience
JWT_EXPIRE_TIME=7d

# Bcrypt salt rounds for password hashing
# Higher = more secure but slower (10-12 recommended for production)
BCRYPT_SALT_ROUNDS=10

# ==============================================================================
# FILE UPLOAD CONFIGURATION
# ==============================================================================

# Maximum file upload size in bytes
# Default: 52428800 (50MB)
# Examples: 10MB = 10485760, 100MB = 104857600
# Note: Also configure this in your reverse proxy (nginx)
MAX_FILE_SIZE=52428800

# Allowed file MIME types (comma-separated)
# Supported formats: PDF, DOCX, DOC, TXT
ALLOWED_FILE_TYPES=application/pdf,application/vnd.openxmlformats-officedocument.wordprocessingml.document,application/msword,text/plain

# ==============================================================================
# RATE LIMITING
# ==============================================================================

# Time window for rate limiting in milliseconds
# Default: 900000 (15 minutes)
RATE_LIMIT_WINDOW_MS=900000

# Maximum requests per IP per window
# Adjust based on expected usage (stricter in production)
RATE_LIMIT_MAX_REQUESTS=100

# ==============================================================================
# LOGGING
# ==============================================================================

# Minimum log level (error | warn | info | debug)
# Production: typically 'warn' or 'error'
LOG_LEVEL=info

# Log output format (json | combined | common | dev)
# Use 'json' for structured logging in production
LOG_FORMAT=combined

# ==============================================================================
# CORS (CROSS-ORIGIN RESOURCE SHARING)
# ==============================================================================

# Comma-separated list of allowed origins (no trailing slashes)
# Add all your frontend domains here
# Example: https://app.domain.com,https://staging.domain.com
CORS_ALLOWED_ORIGINS=http://localhost:5173,http://localhost:3001

# ==============================================================================
# SESSION MANAGEMENT
# ==============================================================================

# Express session secret (can be same as JWT_SECRET or different)
# Generate with: openssl rand -base64 32
SESSION_SECRET=your_session_secret_key

# Session cookie max age in milliseconds
# Default: 86400000 (24 hours)
SESSION_MAX_AGE=86400000

# ==============================================================================
# REDIS CONFIGURATION
# ==============================================================================
# Redis is used for: queues, caching, rate limiting, session storage

# Redis server hostname or IP
REDIS_HOST=localhost

# Redis server port
REDIS_PORT=6379

# Redis password (leave empty for local development)
# Set this for production Redis instances
REDIS_PASSWORD=

# Redis database number (0-15)
# Use different DBs to separate concerns (e.g., 0=cache, 1=queues)
REDIS_DB=0

# Enable TLS for Redis connection (required for some cloud providers)
REDIS_TLS_ENABLED=false

# ==============================================================================
# BULL QUEUE CONFIGURATION
# ==============================================================================
# Bull queues handle background jobs like document processing

# Dedicated Redis connection for Bull queues (optional)
# Falls back to main Redis config if not specified
BULL_REDIS_HOST=localhost
BULL_REDIS_PORT=6379
BULL_REDIS_PASSWORD=

# Separate Redis DB for queues (recommended)
BULL_REDIS_DB=1

# Number of jobs processed simultaneously per worker
# Adjust based on server resources and job complexity
QUEUE_CONCURRENCY=5

# Default job options (JSON format)
# removeOnComplete: Number of completed jobs to keep
# removeOnFail: Number of failed jobs to keep
# attempts: Number of retry attempts for failed jobs
QUEUE_DEFAULT_JOB_OPTIONS={"removeOnComplete":100,"removeOnFail":50,"attempts":3}

# ==============================================================================
# JOB PROCESSING
# ==============================================================================

# Maximum concurrent jobs across all workers
MAX_CONCURRENT_JOBS=5

# Job timeout in milliseconds (5 minutes default)
# Increase for long-running tasks like large document processing
JOB_TIMEOUT_MS=300000

# Enable detailed job monitoring and metrics
ENABLE_JOB_MONITORING=true

# ==============================================================================
# EMAIL CONFIGURATION (OPTIONAL)
# ==============================================================================
# Configure if you want email notifications

# SMTP server hostname
# Examples: smtp.gmail.com, smtp.sendgrid.net, smtp-relay.sendinblue.com
EMAIL_HOST=smtp.gmail.com

# SMTP server port (587 for TLS, 465 for SSL, 25 for unencrypted)
EMAIL_PORT=587

# SMTP authentication username (usually your email)
EMAIL_USER=your_email@gmail.com

# SMTP authentication password
# For Gmail: use app-specific password, not regular password
EMAIL_PASS=your_email_password

# Default "from" address for emails
# Format: Display Name <email@domain.com>
EMAIL_FROM=AI Course Creator <noreply@aicourse.com>

# ==============================================================================
# ERROR TRACKING (OPTIONAL)
# ==============================================================================

# Sentry DSN for error tracking
# Get from: https://sentry.io (free tier available)
# Leave empty to disable Sentry
SENTRY_DSN=

# Environment name for Sentry (usually same as NODE_ENV)
SENTRY_ENVIRONMENT=development

# ==============================================================================
# MONITORING
# ==============================================================================

# Enable Prometheus metrics endpoint
# Access metrics at http://localhost:METRICS_PORT/metrics
ENABLE_METRICS=true

# Port for Prometheus metrics endpoint
# Should be different from main application port
METRICS_PORT=9090

# ==============================================================================
# TESTING
# ==============================================================================

# Run extended test suite (includes slow integration tests)
# Enable in CI/CD pipelines
ENABLE_FULL_TEST_SUITE=false

# ==============================================================================
# DOCUMENT PROCESSING (ADVANCED)
# ==============================================================================
# These have good defaults but can be tuned for your use case

# Maximum chunk size in tokens (affects search accuracy vs API costs)
# Default: 1000
# MAX_CHUNK_SIZE=1000

# Minimum chunk size in tokens (prevents too-small chunks)
# Default: 100
# MIN_CHUNK_SIZE=100

# Token overlap between chunks (maintains context)
# Default: 50
# OVERLAP_SIZE=50

# Quality score thresholds (0-100)
# Documents below minimum are rejected
# QUALITY_MINIMUM=50
# QUALITY_RECOMMENDED=70
# QUALITY_PREMIUM=85