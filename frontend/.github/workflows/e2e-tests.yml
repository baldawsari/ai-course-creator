name: E2E Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run nightly at 2 AM UTC
    - cron: '0 2 * * *'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Core E2E tests across browsers
  e2e-core:
    name: E2E Tests (${{ matrix.browser }})
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox, webkit]
        include:
          - browser: chromium
            project: chromium
          - browser: firefox  
            project: firefox
          - browser: webkit
            project: webkit
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'
          
      - name: Install dependencies
        working-directory: frontend
        run: npm ci
        
      - name: Install Playwright browsers
        working-directory: frontend
        run: npx playwright install --with-deps ${{ matrix.browser }}
        
      - name: Build frontend
        working-directory: frontend
        run: npm run build
        
      - name: Start application
        working-directory: frontend
        run: |
          npm run start &
          npx wait-on http://localhost:3000 --timeout 60000
        
      - name: Run E2E tests
        working-directory: frontend
        run: npx playwright test --project=${{ matrix.project }}
        env:
          CI: true
          PLAYWRIGHT_BASE_URL: http://localhost:3000
          
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-results-${{ matrix.browser }}
          path: |
            frontend/test-results/
            frontend/playwright-report/
          retention-days: 7

  # Mobile device testing
  e2e-mobile:
    name: Mobile E2E Tests
    runs-on: ubuntu-latest
    timeout-minutes: 25
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'
          
      - name: Install dependencies
        working-directory: frontend
        run: npm ci
        
      - name: Install Playwright browsers
        working-directory: frontend
        run: npx playwright install --with-deps chromium
        
      - name: Build frontend
        working-directory: frontend
        run: npm run build
        
      - name: Start application
        working-directory: frontend
        run: |
          npm run start &
          npx wait-on http://localhost:3000 --timeout 60000
        
      - name: Run mobile E2E tests
        working-directory: frontend
        run: npx playwright test --project=mobile-chrome --project=mobile-safari --project=tablet-ipad
        env:
          CI: true
          PLAYWRIGHT_BASE_URL: http://localhost:3000
          
      - name: Upload mobile test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-results-mobile
          path: |
            frontend/test-results/
            frontend/playwright-report/
          retention-days: 7

  # Performance testing
  e2e-performance:
    name: Performance Tests
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'
          
      - name: Install dependencies
        working-directory: frontend
        run: npm ci
        
      - name: Install Playwright browsers
        working-directory: frontend
        run: npx playwright install --with-deps chromium
        
      - name: Build frontend (production)
        working-directory: frontend
        run: npm run build
        
      - name: Start application
        working-directory: frontend
        run: |
          npm run start &
          npx wait-on http://localhost:3000 --timeout 60000
        
      - name: Run performance tests
        working-directory: frontend
        run: npx playwright test --project=performance
        env:
          CI: true
          PLAYWRIGHT_BASE_URL: http://localhost:3000
          
      - name: Upload performance results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: performance-results
          path: |
            frontend/test-results/
            frontend/lighthouse-reports/
          retention-days: 14

  # Accessibility testing
  e2e-accessibility:
    name: Accessibility Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'
          
      - name: Install dependencies
        working-directory: frontend
        run: npm ci
        
      - name: Install Playwright browsers
        working-directory: frontend
        run: npx playwright install --with-deps chromium
        
      - name: Build frontend
        working-directory: frontend
        run: npm run build
        
      - name: Start application
        working-directory: frontend
        run: |
          npm run start &
          npx wait-on http://localhost:3000 --timeout 60000
        
      - name: Run accessibility tests
        working-directory: frontend
        run: npx playwright test --project=accessibility --project=accessibility-dark
        env:
          CI: true
          PLAYWRIGHT_BASE_URL: http://localhost:3000
          
      - name: Upload accessibility results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: accessibility-results
          path: |
            frontend/test-results/
            frontend/accessibility-reports/
          retention-days: 14

  # Test result consolidation and reporting
  test-results:
    name: Consolidate Test Results
    runs-on: ubuntu-latest
    needs: [e2e-core, e2e-mobile, e2e-performance, e2e-accessibility]
    if: always()
    
    steps:
      - name: Download all test results
        uses: actions/download-artifact@v4
        with:
          path: test-results
          
      - name: Merge test reports
        run: |
          mkdir -p merged-results
          find test-results -name "*.xml" -exec cp {} merged-results/ \;
          find test-results -name "*.json" -exec cp {} merged-results/ \;
          
      - name: Generate summary report
        run: |
          echo "# E2E Test Results Summary" > test-summary.md
          echo "" >> test-summary.md
          echo "## Test Execution" >> test-summary.md
          echo "- **Workflow:** ${{ github.workflow }}" >> test-summary.md
          echo "- **Run ID:** ${{ github.run_id }}" >> test-summary.md
          echo "- **Commit:** ${{ github.sha }}" >> test-summary.md
          echo "- **Branch:** ${{ github.ref_name }}" >> test-summary.md
          echo "- **Triggered by:** ${{ github.event_name }}" >> test-summary.md
          echo "" >> test-summary.md
          
          # Count test files
          total_tests=$(find test-results -name "*.json" | wc -l)
          echo "- **Total test suites:** $total_tests" >> test-summary.md
          
          echo "" >> test-summary.md
          echo "## Artifacts" >> test-summary.md
          echo "- Test reports and screenshots are available in the workflow artifacts" >> test-summary.md
          
      - name: Upload consolidated results
        uses: actions/upload-artifact@v4
        with:
          name: consolidated-test-results
          path: |
            merged-results/
            test-summary.md
          retention-days: 30
          
      - name: Comment PR with results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            if (fs.existsSync('test-summary.md')) {
              const summary = fs.readFileSync('test-summary.md', 'utf8');
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: summary
              });
            }

  # Notify on test failures
  notify-failure:
    name: Notify on Failure
    runs-on: ubuntu-latest
    needs: [e2e-core, e2e-mobile, e2e-performance, e2e-accessibility]
    if: failure() && github.ref == 'refs/heads/main'
    
    steps:
      - name: Send failure notification
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.repos.createDispatchEvent({
              owner: context.repo.owner,
              repo: context.repo.repo,
              event_type: 'e2e-test-failure',
              client_payload: {
                workflow: '${{ github.workflow }}',
                run_id: '${{ github.run_id }}',
                commit: '${{ github.sha }}',
                branch: '${{ github.ref_name }}'
              }
            });